apiVersion: apps/v1
kind: Deployment
metadata:
  name: eramba
  namespace: eramba
  labels:
    app: eramba
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eramba
  template:
    metadata:
      labels:
        app: eramba
    spec:
      initContainers:
      - name: init-eramba
        image: busybox:1.35
        command: [ "/bin/sh", "-c" ]
        args:
        - |
          # Aguardar MySQL estar dispon√≠vel
          echo "Aguardando MySQL estar dispon√≠vel..."
          until nc -z mysql 3306; do
            echo "MySQL ainda n√£o est√° dispon√≠vel, aguardando..."
            sleep 5
          done
          echo "‚úÖ MySQL est√° dispon√≠vel!"
      - name: init-volumes
        image: busybox:1.35
        command: [ "/bin/sh", "-c" ]
        args:
        - |
          echo "üìÅ Inicializando volumes..."

          # Criar diret√≥rios necess√°rios
          echo "üìã Criando diret√≥rios de dados e logs..."
          mkdir -p /var/www/eramba/app/upgrade/data
          mkdir -p /var/www/eramba/app/upgrade/logs

          # Ajustar permiss√µes
          echo "üìã Ajustando permiss√µes..."
          chown -R 33:33 /var/www/eramba/app/upgrade/data
          chown -R 33:33 /var/www/eramba/app/upgrade/logs
          chmod -R 755 /var/www/eramba/app/upgrade/data
          chmod -R 755 /var/www/eramba/app/upgrade/logs

          echo "‚úÖ Volumes inicializados!"
        volumeMounts:
        - name: eramba-data
          mountPath: /var/www/eramba/app/upgrade/data
        - name: eramba-logs
          mountPath: /var/www/eramba/app/upgrade/logs
        securityContext:
          runAsUser: 0
      containers:
      - name: eramba
        image: ghcr.io/eramba/eramba:latest
        ports:
        - containerPort: 443
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: DB_HOST
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: DB_DATABASE
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: eramba-secrets
              key: DB_PASSWORD
        - name: CACHE_URL
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: CACHE_URL
        - name: USE_PROXY
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: USE_PROXY
        - name: PROXY_HOST
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: PROXY_HOST
        - name: PROXY_PORT
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: PROXY_PORT
        - name: USE_PROXY_AUTH
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: USE_PROXY_AUTH
        - name: PROXY_AUTH_USER
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: PROXY_AUTH_USER
        - name: PROXY_AUTH_PASS
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: PROXY_AUTH_PASS
        - name: PUBLIC_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: PUBLIC_ADDRESS
        - name: DOCKER_DEPLOYMENT
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: DOCKER_DEPLOYMENT
        - name: LDAPTLS_REQCERT
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: LDAPTLS_REQCERT
        volumeMounts:
        - name: eramba-data
          mountPath: /var/www/eramba/app/upgrade/data
        - name: eramba-logs
          mountPath: /var/www/eramba/app/upgrade/logs
        - name: apache-ssl
          mountPath: /etc/ssl/certs/mycert.crt
          subPath: mycert.crt
        - name: apache-ssl
          mountPath: /etc/ssl/private/mycert.key
          subPath: mycert.key
        - name: apache-security
          mountPath: /etc/apache2/conf-available/security.conf
          subPath: security.conf
        - name: apache-ports
          mountPath: /etc/apache2/ports.conf
          subPath: ports.conf
        - name: apache-vhost
          mountPath: /etc/apache2/sites-available/000-default.conf
          subPath: vhost-ssl.conf
        - name: crontab
          mountPath: /etc/cron.d/eramba-crontab
          subPath: crontab
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: eramba-data
        persistentVolumeClaim:
          claimName: eramba-data-pvc
      - name: eramba-logs
        persistentVolumeClaim:
          claimName: eramba-logs-pvc
      - name: apache-ssl
        configMap:
          name: apache-ssl-config
      - name: apache-security
        configMap:
          name: apache-security-config
      - name: apache-ports
        configMap:
          name: apache-ports-config
      - name: apache-vhost
        configMap:
          name: apache-vhost-config
      - name: crontab
        configMap:
          name: crontab-config
---
apiVersion: v1
kind: Service
metadata:
  name: eramba
  namespace: eramba
  labels:
    app: eramba
spec:
  ports:
  - port: 443
    targetPort: 443
    protocol: TCP
  selector:
    app: eramba
