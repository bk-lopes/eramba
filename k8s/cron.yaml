apiVersion: apps/v1
kind: Deployment
metadata:
  name: cron
  namespace: eramba
  labels:
    app: cron
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cron
  template:
    metadata:
      labels:
        app: cron
    spec:
      containers:
      - name: cron
        image: ghcr.io/eramba/eramba:latest
        command: [ "cron", "-f" ]
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: DB_HOST
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: DB_DATABASE
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: eramba-secrets
              key: DB_PASSWORD
        - name: CACHE_URL
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: CACHE_URL
        - name: USE_PROXY
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: USE_PROXY
        - name: PROXY_HOST
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: PROXY_HOST
        - name: PROXY_PORT
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: PROXY_PORT
        - name: USE_PROXY_AUTH
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: USE_PROXY_AUTH
        - name: PROXY_AUTH_USER
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: PROXY_AUTH_USER
        - name: PROXY_AUTH_PASS
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: PROXY_AUTH_PASS
        - name: PUBLIC_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: PUBLIC_ADDRESS
        - name: DOCKER_DEPLOYMENT
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: DOCKER_DEPLOYMENT
        - name: LDAPTLS_REQCERT
          valueFrom:
            configMapKeyRef:
              name: eramba-config
              key: LDAPTLS_REQCERT
        volumeMounts:
        - name: eramba-app
          mountPath: /var/www/eramba
        - name: eramba-data
          mountPath: /var/www/eramba/app/upgrade/data
        - name: eramba-logs
          mountPath: /var/www/eramba/app/upgrade/logs
        - name: crontab
          mountPath: /etc/cron.d/eramba-crontab
          subPath: crontab
        - name: docker-env
          mountPath: /var/www/docker.env
          subPath: .env
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: eramba-app
        persistentVolumeClaim:
          claimName: eramba-app-pvc
      - name: eramba-data
        persistentVolumeClaim:
          claimName: eramba-data-pvc
      - name: eramba-logs
        persistentVolumeClaim:
          claimName: eramba-logs-pvc
      - name: crontab
        configMap:
          name: crontab-config
      - name: docker-env
        configMap:
          name: eramba-config
